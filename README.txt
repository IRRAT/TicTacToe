   (                                            )       
  *   ))\ )  (      *   )   (       (      *   ) ( /(       
` )  /(()/(  )\   ` )  /(   )\      )\   ` )  /( )\()) (    
 ( )(_))(_)|((_)   ( )(_)|(((_)(  (((_)   ( )(_)|(_)\  )\   
(_(_()|_)) )\___  (_(_()) )\ _ )\ )\___  (_(_())  ((_)((_)  
|_   _|_ _((/ __| |_   _| (_)_\(_|(/ __| |_   _| / _ \| __| 
  | |  | | | (__    | |    / _ \  | (__    | |  | (_) | _|  
  |_| |___| \___|   |_|   /_/ \_\  \___|   |_|   \___/|___| 
                              
by Андрей Бабенко     почта: Edlert@rambler.ru

=== Общий принцип ===

После запуска метода Controller.run создается таблица, где rows - количество столбцов и lines - количество строчек.

Запускается цикл, который выполняется пока соблюдается условие Win == False:
Инициализируются координаты первого хода(x,y) которые проверяются условиями(свободна ли указанная
ячейка и не выходят ли они за границы игрового поля)
Далее координаты записываются в  список Model.x_turns или Model.о_turns в зависимости от того чей ход.
Таблица обновляется.
Запускается  метод определения победы Controller.is_win

Выводится сообщение оглашения победителя.


=== Алгоритм определения победителя ( метод Controller.is_win ) ===

Сперва высчитывается расстояние между последними указанными координатами и координатами которые уже содержатся
в списке совершенных ходов (Model.x_turns или Model.о_turns)
Если подсчитанное расстояние равно "2" ( расстояние между крайними точками по горизонтали либо вертикали) 
или "2**0.5*2" расстояние между крайними точками по диагонали) тогда с помощью метода Controller.calculate_middle_point (подробнее внизу)
мы расcчитываем координаты третей точки, которая находится между крайними и лежит на одной линии с ними.
Если полученные координаты третей точки уже находятся в списке совершенных ходов ( Model.x_turns или Model.о_turns)-
то объявляется победа.

Например в такой ситуации:
 
первый ход -   0| |
              -------
второй ход -   0| |
	      -------
третий ход -    | |


Если же нет, то полученные координаты средней точки записываются в список (Model.midleX или Model.midle0)

Если последние введенные координаты находятся в списке Model.midleX или Model.midle0 то объявляется победа.


Например в такой ситуации:
 
первый ход -   0| |
              -------
третий ход -    | |
	      -------
второй ход -   0| |


=== Метод Controller.calculate_middle_point ===

Для нахождения координат точки, между двумя крайними  -
воспользуемся условием нахождения трех точек на одной прямой : (у2-у1)/(х2-х1)=(у3-у1)/(х3-х1)  

(т.е. тангенсы угла наклона соединяющих их отрезков равны).





			   


 	






 